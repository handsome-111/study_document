{\rtf1\ansi\ansicpg936\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f1\fnil Courier New;}}
{\colortbl ;\red255\green0\blue0;\red127\green0\blue85;\red0\green0\blue0;\red106\green62\blue62;\red63\green127\blue95;\red42\green0\blue255;\red0\green0\blue192;}
{\*\generator Riched20 10.0.14393}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs22\lang2052 Spring\'b6\'af\'cc\'ac\'b1\'ed\'b4\'ef\'ca\'bd\'d3\'ef\'d1\'d4(\'bc\'f2\'b3\'c6SpEL)\'ca\'c7\'d2\'bb\'b8\'f6\'d6\'a7\'b3\'d6\'d4\'cb\'d0\'d0\'ca\'b1\'b2\'e9\'d1\'af\'ba\'cd\'b2\'d9\'d7\'f7\'b6\'d4\'cf\'f3\'cd\'bc\'b5\'c4\'c7\'bf\'b4\'f3\'b6\'af\'cc\'ac\'d3\'ef\'d1\'d4\'a1\'a3 \cf1\'be\'cd\'cf\'f1\'ca\'c7\'b1\'e0\'d2\'eb\'b3\'cc\'d0\'f2\'d2\'bb\'d1\'f9\'a3\'ac\'bd\'ab\'d2\'bb\'be\'e4\'d7\'d6\'b7\'fb\'b4\'ae\'bd\'e2\'ce\'f6\'b3\'f6\'bd\'e1\'b9\'fb\'c0\'b4\'a1\'a3\line\cf0\'b6\'af\'cc\'ac\'d3\'ef\'d1\'d4\'b5\'c3\'d2\'e6\'d3\'da\'b6\'af\'cc\'ac\'a3\'ac\'bc\'f2\'b5\'a5\'a3\'ac\'c1\'e9\'bb\'ee\'b5\'c8\'cc\'d8\'d0\'d4\'a1\'a3\'d2\'f2\'ce\'aa\'cb\'fb\'c3\'c7\'ce\'de\'d0\'eb\'b1\'e0\'d2\'eb\'a3\'ac\'be\'cd\'bf\'c9\'d2\'d4\'b1\'bb\'bd\'e2\'ca\'cd\'d6\'b4\'d0\'d0\'a1\'a3\'d4\'da\'d4\'cb\'d0\'d0\'ca\'b1\'b6\'af\'cc\'ac\'b8\'c4\'b1\'e4\'b1\'ed\'b4\'ef\'ca\'bd\'d3\'ef\'be\'e4\'a3\'ac\'b7\'c7\'b3\'a3\'ca\'ca\'ba\'cf\'b1\'e0\'d0\'b4\'b8\'b4\'d4\'d3\'b5\'c4\'b6\'af\'cc\'ac\'b1\'ed\'b4\'ef\'ca\'bd\'a1\'a3\line\b0\line\b\'bd\'c5\'b1\'be\'b6\'af\'cc\'ac\'ca\'b5\'cf\'d6\'ba\'af\'ca\'fd:\line\tab\cf2\f1 public\cf3\b0  \cf2\b static\cf3\b0  \cf2\b void\cf3\b0  main(String[] \cf4 args\cf3 ) \cf2\b throws\cf3\b0  Exception \{\cf0\line\cf3\tab\tab\ul\b ScriptEngineManager\ulnone  \cf4\b0 manager\cf3 =\cf2\b new\cf3\b0  ScriptEngineManager();\tab\tab\tab\cf5\b //\f0\'ca\'b5\'c0\'fd\'bb\'af\'bd\'c5\'b1\'be\'d2\'fd\'c7\'e6\'b9\'dc\'c0\'ed\'c6\'f7\cf0\f1\line\cf3\b0\tab\tab\b ScriptEngine \cf4\b0 engine\cf3 =\cf4\b manager\cf3 .getEngineByName(\cf6 "JavaScript"\cf3 );\b0\tab\tab\f0\tab\cf5\b\f1 //\f0\'b4\'b4\'bd\'a8\'bd\'c5\'b1\'be\'d2\'fd\'c7\'e6\cf0\f1\line\cf3\b0\tab\tab String \cf4 scriptText\cf3 =\cf6 "function sum(a,b)\{return a+b;\}"\cf3 ;\tab\tab\tab\tab\cf0\line\cf3\tab\tab\cf4\b engine\cf3 .eval(\cf4 scriptText\cf3 );\tab\tab\b0\tab\tab\tab\tab\tab\tab\tab\cf5\b //\f0\'d7\'a2\'b2\'e1\f1 JavaScript\f0\'c7\'f3\'ba\'cd\'ba\'af\'ca\'fd\'bd\'c5\'b1\'be\cf0\f1\line\cf3\b0\tab\tab Invocable \cf4 invocable\cf3 =(Invocable) \cf4 engine\cf3 ;\cf0\line\cf3\tab\tab Object \cf4 result\cf3 =\cf4 invocable\cf3 .\b invokeFunction(\cf6 "sum"\cf3 , 100,99);\b0\tab\tab\tab\cf5\b //\f0\'b5\'f7\'d3\'c3\'d7\'a2\'b2\'e1\'ba\'af\'ca\'fd\'a3\'ac\'b5\'da\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd\'ca\'c7\'ba\'af\'ca\'fd\'c3\'fb\'a3\'ac\'ba\'f3\'c3\'e6\'b5\'c4\'ca\'c7\'b2\'ce\'ca\'fd\cf0\f1\line\cf3\b0\tab\tab System.\cf7\b\i out\cf3\b0\i0 .println(\cf4 result\cf3 );\line\line\line\cf1\b\f0 SpEL\'b1\'ed\'b4\'ef\'ca\'bd\cf3\b0\'a3\'ba\'d6\'a7\'b3\'d6\'d4\'cb\'d0\'d0\'ca\'b1\'b2\'e9\'d1\'af\'ba\'cd\'b2\'d9\'d7\'f7\'b6\'d4\'cf\'f3\'cd\'bc\'b5\'c4\'c7\'bf\'b4\'f3\'b6\'af\'cc\'ac\'d3\'ef\'d1\'d4\'a1\'a3SpEL\'b1\'bb\'c9\'e8\'bc\'c6\'b3\'c9\'d2\'bb\'b8\'f6\'bf\'c9\'b6\'c0\'c1\'a2\'d4\'cb\'d0\'d0\'b5\'c4\'c4\'a3\'bf\'e9\'a3\'ac\'bf\'c9\'d2\'d4\'cd\'d1\'c0\'ebSpring\'c8\'dd\'c6\'f7\'d6\'b1\'bd\'d3\'d4\'cb\'d0\'d0:\line\tab\cf2\b\f1 public\cf3\b0  \cf2\b static\cf3\b0  \cf2\b void\cf3\b0  main(String[] \cf4 args\cf3 ) \{\cf0\line\cf3\tab\tab\b ExpressionParser\b0  \cf4 parser\cf3 =\cf2\b new\cf3\b0  \b SpelExpressionParser\b0 ();\tab\tab\tab\cf1\b //\f0\'ca\'b5\'c0\'fd\'bb\'af\f1 SpEL\f0\'b1\'ed\'b4\'ef\'ca\'bd\'bd\'e2\'ce\'f6\'c6\'f7\f1\line\cf3\b0\tab\tab\b Expression \cf4\b0 exp\cf3 =\cf4 parser\cf3 .parseExpression(\cf6 "'Hello'+'world'"\cf3 );\tab\f0\tab\cf1\b\f1 //\f0\'b6\'d4\'b1\'ed\'b4\'ef\'ca\'bd\'bd\'f8\'d0\'d0\'bd\'e2\'ce\'f6\'a3\'ac\'b5\'a5\'d2\'fd\'ba\'c5\'b1\'ed\'ca\'be\f1 String\f0\'c0\'e0\'d0\'cd\cf0\b0\f1\line\cf3\tab\tab String \cf4 message\cf3 =(String) \cf4 exp\cf3 .getValue();\f0\tab\tab\tab\tab\tab\cf1\b //\'d2\'b2\'bf\'c9\'d2\'d4exp.getValue(String.class)\f1\line\cf3\b0\tab\tab System.\cf7\b\i out\cf3\b0\i0 .println(\cf4 message\cf3 );\cf0\line\cf3\tab\}\line\b\f0 ExpressionParser\b0\'bd\'d3\'bf\'da\'d3\'c3\'c0\'b4\'bd\'e2\'ce\'f6\'b1\'ed\'b4\'ef\'ca\'bd\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'b1\'ed\'b4\'ef\'ca\'bd\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'d2\'bb\'b8\'f6\'d3\'c3\'b5\'a5\'d2\'fd\'ba\'c5\'b1\'ea\'d7\'a2\'bb\'f2\'d3\'c3\'d7\'aa\'d2\'e5\'b5\'c4\'cb\'ab\'d2\'fd\'ba\'c5\'b1\'ea\'d7\'a2\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'a1\'a3\tab\cf0\f1\par
\par
\line\cf1\b\f0 EvaluationContext\cf0\'bd\'d3\'bf\'da\cf1\'a3\'ac\cf0\'ca\'b5\'cf\'d6\'c0\'e0\cf1 StandardEvaluationContext:\line\tab\cf0\'b4\'cb\'bd\'d3\'bf\'da\'cc\'e1\'b9\'a9\'c1\'cb\'ca\'f4\'d0\'d4\'a3\'ac\'b7\'bd\'b7\'a8\'a3\'ac\'d7\'d6\'b6\'ce\'bd\'e2\'ce\'f6\'c6\'f7\'ba\'cd\'c0\'e0\'d0\'cd\'d7\'aa\'bb\'bb\'c6\'f7\'a1\'a3\line\tab StandardEvaluationContext\'c0\'e0\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'b9\'b9\'d4\'ec\'ba\'af\'ca\'fd\'b4\'ab\'b5\'dd\'c7\'f3\'d6\'b5\'b6\'d4\'cf\'f3\'a3\'ac\'bb\'f2\'cd\'a8\'b9\'fdsetRootObject()\'b7\'bd\'b7\'a8\'c9\'e8\'d6\'c3\'c7\'f3\'d6\'b5\'b8\'f9\'b6\'d4\'cf\'f3\'a3\'ac\'cd\'a8\'b9\'fdsetVariable()\'b7\'bd\'b7\'a8\'c9\'e8\'d6\'c3\'cf\'e0\'b9\'d8\'b1\'e4\'c1\'bf\'a1\'a3\line\tab\'cd\'a8\'b9\'fdregisterFunction()\'b7\'bd\'b7\'a8\'d7\'a2\'b2\'e1\'d7\'d4\'b6\'a8\'d2\'e5\'ba\'af\'ca\'fd\'a1\'a3\line\'d2\'bb\'b8\'f6\'bc\'f2\'b5\'a5\'b5\'c4\'bd\'e2\'ce\'f6\'a3\'ba\line\tab\cf2\f1 public\cf3\b0  \cf2\b class\cf3\b0  Simple \{\cf0\line\cf3\tab\f0\tab\cf2\b\f1 public\cf3\b0  List<Boolean> \cf7 booleanList\cf3 =\cf2\b new\cf3\b0  ArrayList<Boolean>();\cf0\line\cf3\tab\f0\tab\cf2\b\f1 public\cf3\b0  \cf2\b static\cf3\b0  \cf2\b void\cf3\b0  main(String[] \cf4 args\cf3 ) \{\cf0\line\cf3\tab\f0\tab\f1\tab Simple \cf4 simple\cf3 =\cf2\b new\cf3\b0  Simple();\cf0\line\cf3\tab\tab\f0\tab\cf4\f1 simple\cf3 .\cf7 booleanList\cf3 .add(\cf2\b true\cf3\b0 );\cf0\line\cf3\tab\tab\cf0\line\cf3\tab\tab\f0\tab\f1 ExpressionParser \cf4 parser\cf3 =\cf2\b new\cf3\b0  \cf1\b SpelExpressionParser();\cf3\b0\tab\tab\tab\tab\tab\cf1\b //\f0\'b4\'b4\'bd\'a8\'bd\'e2\'ce\'f6\'c6\'f7\cf0\b0\f1\line\cf3\tab\tab\f0\tab\f1 StandardEvaluationContext \cf4 context\cf3 =\cf2\b new\cf3\b0  \cf1\b StandardEvaluationContext(simple);\cf3\b0\tab\cf1\b //\f0\'b4\'b4\'bd\'a8\'c8\'a1\'d6\'b5\'c9\'cf\'cf\'c2\'ce\'c4\cf0\b0\f1\line\cf3\tab\tab\f0\tab\cf0\f1\line\cf3\tab\tab\f0\tab\cf4\f1 parser\cf3 .\cf1\b parseExpression\cf0 ("booleanList[0]").\cf1 setValue\cf3 (\cf4 context\cf3 , \cf6 "false"\cf3 );\b0\tab\tab\cf1\b //\f0\'bd\'e2\'ce\'f6\'b1\'ed\'b4\'ef\'ca\'bd\'c7\'d2\'b8\'b3\'d6\'b5\cf0\b0\f1\line\cf3\tab\tab\f0\tab\f1 System.\cf7\b\i out\cf3\b0\i0 .println(\cf4 simple\cf3 .\cf7 booleanList\cf3 .get(0));\cf0\line\cf3\tab\f0\tab\f1\}\cf0\line\f0\tab\cf3\f1\}\cf0\line\line\cf1\b\f0 SpEL\'b1\'e0\'d2\'eb\'c6\'f7\'a3\'ba\cf0\'bd\'ab\'b1\'ed\'b4\'ef\'ca\'bd\'d6\'b1\'bd\'d3\'b1\'e0\'d2\'eb\'b3\'c9\'d7\'d6\'bd\'da\'c2\'eb\'a3\'ac\'b4\'d3\'b6\'f8\'b1\'dc\'c3\'e2\'c3\'bf\'b4\'ce\'b5\'f7\'d3\'c3\'ca\'b1\'bd\'f8\'d0\'d0\'d3\'ef\'b7\'a8\'bd\'e2\'ce\'f6\'cb\'f9\'b2\'fa\'c9\'fa\'b5\'c4\'ca\'b1\'bc\'e4\'cf\'fb\'ba\'c4\'a3\'ac\'cc\'e1\'b8\'df\'c1\'cb\'d6\'b4\'d0\'d0\'d0\'a7\'c2\'ca\'a1\'a3\b0\line\tab\cf2\b\f1 public\cf3\b0  \cf2\b static\cf3\b0  \cf2\b void\cf3\b0  main(String \cf4 args\cf3 [])\{\cf0\line\cf3\tab\tab User \cf4 user\cf3 =\cf2\b new\cf3\b0  User();\cf0\line\cf3\tab\tab\cf5 //\f0\'b4\'b4\'bd\'a8\'bd\'e2\'ce\'f6\'c5\'e4\'d6\'c3\cf0\f1\line\cf3\tab\tab SpelParserConfiguration \cf4 configuration\cf3 =\cf0\line\cf3\tab\tab\tab\tab\cf2\b new\cf3\b0  SpelParserConfiguration(SpelCompilerMode.\cf7\b\i IMMEDIATE\cf3\b0\i0 ,Test2.\cf2\b class\cf3\b0 .getClassLoader());\cf0\line\cf3\tab\tab\cf0\line\cf3\tab\tab SpelExpressionParser \cf4 parser\cf3 =\cf2\b new\cf3\b0  SpelExpressionParser(\cf4 configuration\cf3 );\tab\cf5 //\f0\'b4\'b4\'bd\'a8\'bd\'e2\'ce\'f6\'c6\'f7\cf0\f1\line\cf3\tab\tab EvaluationContext \cf4 con\cf3 =\cf2\b new\cf3\b0  StandardEvaluationContext(\cf4 user\cf3 );\tab\tab\tab\tab\cf5 //\f0\'b4\'b4\'bd\'a8\'c8\'a1\'d6\'b5\'c9\'cf\'cf\'c2\'ce\'c4\cf0\f1\line\cf3\tab\tab Boolean \cf4 boo\cf3 =(Boolean) \cf4 parser\cf3 .parseRaw(\cf6 "isVipMember('toma')&&isVipMember('jony')"\cf3 ).getValue(\cf4 con\cf3 );\cf0\line\cf3\tab\tab System.\cf7\b\i out\cf3\b0\i0 .println(\cf4 boo\cf3 );\cf0\line\cf3\tab\}\cf0\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\cf3\tab\}\cf0\f0\par
}
 